## Modern Admin Dashboard Design Guidelines (SvelteKit + Tailwind + Flowbite) ##

**Core Principles:**
*   **Aesthetic:** Modern, clean, professional, and user-friendly. Prioritize clarity and ease of use.
*   **Responsiveness:** Ensure seamless usability across desktop, tablet, and mobile devices using Tailwind's responsive utilities.
*   **Consistency:** Maintain uniform styling, spacing, and component usage throughout the dashboard via Flowbite components and Tailwind theme.
*   **Accessibility:** Adhere to accessibility standards (WCAG) using semantic HTML, ARIA attributes (often handled by `flowbite-svelte`), sufficient color contrast, and keyboard navigability.

**Layout Structure:**
*   **Standard Pattern:** Implement a common two-column layout:
    *   **Fixed Sidebar:** Persistent navigation menu (`flowbite-svelte` Sidebar component recommended). Can be collapsible on smaller screens. Include branding/logo.
    *   **Main Content Area:** Contains a Topbar and the primary page content.
        *   **Topbar/Header:** Sticky or fixed header (`flowbite-svelte` Navbar). Include page title/breadcrumbs, global search (optional), notifications, user profile dropdown (`flowbite-svelte` Dropdown, Avatar).
        *   **Page Content:** Scrollable area displaying the main information (widgets, tables, forms). Use appropriate padding (`p-4`, `md:p-6`, etc.).
*   **Implementation:** Use Flexbox or CSS Grid via Tailwind utilities (`flex`, `grid`) for the main layout structure. Manage overflow (`overflow-auto`, `overflow-hidden`) correctly for scrollable areas.

**Component Strategy (`flowbite-svelte`):**
*   **Leverage `flowbite-svelte`:** Strongly prefer using `flowbite-svelte` components over raw Flowbite HTML/JS for better Svelte integration, reactivity, and reduced manual JS initialization.
*   **Key UI Elements:** Utilize pre-built components for:
    *   **Navigation:** `Sidebar`, `Navbar`, `Dropdown`, `Breadcrumb`.
    *   **Data Display:** `Card` (for widgets/summaries), `Table` (for tabular data), `Badge`, `ListGroup`.
    *   **User Interaction:** `Button`, `Input`, `Select`, `Checkbox`, `Radio`, `Toggle`, `Textarea`, `Modal` (for dialogs/confirmations), `Tooltip`, `Popover`.
    *   **Feedback:** `Alert`, `Toast` (consider `@zerodevx/svelte-toast` integrated with Flowbite styles).
    *   **Visuals:** `Avatar`, `Progressbar`.
*   **Icons:** Use a consistent icon set (`flowbite-svelte-icons` recommended, or alternatives like Feather, Heroicons). Ensure icons have appropriate labels/tooltips for accessibility.

**Styling & Theme:**
*   **Tailwind First:** Use Tailwind utility classes for the majority of styling (layout, spacing, typography, colors).
*   **Flowbite Base:** Rely on the Flowbite Tailwind plugin for base styles and component themes. Configure `tailwind.config.cjs`.
*   **Dark Mode:** Implement dark mode support (`darkMode: 'class'` in Tailwind config) and ensure Flowbite components adapt correctly. Provide a user toggle (often in Topbar).
*   **Customization:**
    *   Extend the Tailwind theme (`theme.extend` in config) for custom brand colors, fonts, or spacing if needed, overriding or adding to Flowbite's defaults.
    *   Apply custom utility classes directly to components or use `flowbite-svelte` props for class injection where available. Avoid overly complex custom CSS where utilities suffice.
*   **Spacing & Padding:** Use consistent spacing values from the Tailwind theme (`p-4`, `m-2`, `gap-6`, etc.) for visual rhythm.

**Visual Hierarchy:**
*   Use typography (size, weight - `text-lg`, `font-semibold`), color, and spacing to guide the user's eye.
*   Clearly differentiate interactive elements (buttons, links) from static content.
*   Ensure key information (KPIs in cards, table actions) is prominent.